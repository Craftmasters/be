<?php
/**
 * Bullseye producer module.
 */

/**
 * Implements hook_menu().
 */
function bullseye_producer_menu() {
  $items = array();

  $items['producer/add'] = array(
    'title' => 'Add New Producer',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bullseye_producer_form'),
    'access arguments' => array('add producer'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['producer/edit'] = array(
    'title' => 'Producer Details',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bullseye_producer_form'),
    'access arguments' => array('add producer'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function bullseye_producer_permission() {
  return array(
    'add producer' => array(
      'title' => t('Add Producer Account'),
      'description' => t('Allow user to add new producer account.'),
    ),
  );
}

/**
 * Implements hook_form().
 *
 * Add producer form.
 */
function bullseye_producer_form($form, &$form_state) {
  $form = array();
  global $user;

  $form['#attributes']['class'][] = 'be-forms be-forms-custom';

  $type = 'company';
  $company = '';
  $firstname = '';
  $lastname = '';
  $email = '';
  $phone = '';
  $website = '';

  $form_title = t('Add New Producer');
  if (arg(1) == 'edit') {
    $form_title = t('Producer Details');
    $be = new Bullseye($user);
    $producer = $be->getProducerDetails(arg(2));
    kpr($producer);
    $type = $producer['field_producer_type_value'];
    $company = $producer['field_producer_name_value'];
    $firstname = $producer['field_first_name_value'];
    $lastname = $producer['field_last_name_value'];
    $email = $producer['mail'];
    $phone = $producer['field_phone_number_value'];
    $website = $producer['field_producer_website_value'];
  }

  $form['form_title'] = array(
    '#prefix' => '<div class="form-title">',
    '#suffix' => '</div>',
    '#markup' => '<h2>' . $form_title . '</h2>',
  );

  $form['type'] = array(
    '#type' => 'radios',
    '#title' => t('Type'),
    '#options' => array(
      'company' => 'Company',
      'individual' => 'Individual',
    ),
    '#default_value' => $type,
    '#required' => TRUE,
  );

  $form['firstname'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#attributes' => array(
      'placeholder' => t('Enter First Name'),
    ),
    '#default_value' => $firstname,
  );

  $form['lastname'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#attributes' => array(
      'placeholder' => t('Enter Last Name'),
    ),
    '#default_value' => $lastname,
  );

  $form['producer_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Producer Name'),
    '#attributes' => array(
      'placeholder' => t('Enter Producer Name'),
    ),
  );

  $form['primary_contact_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Primary Contact'),
    '#attributes' => array(
      'placeholder' => t('Enter Primary Contact'),
    ),
  );

  $form['primary_contact_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email Address'),
    '#required' => TRUE,
    '#attributes' => array(
      'placeholder' => t('Enter Email Address'),
    ),
    '#default_value' => $email,
  );

  $form['phone'] = array(
    '#type' => 'textfield',
    '#title' => t('Phone'),
    '#attributes' => array(
      'placeholder' => t('Enter Phone Number'),
    ),
    '#default_value' => $phone,
  );

  $form['company'] = array(
    '#type' => 'textfield',
    '#title' => t('Company'),
    '#attributes' => array(
      'placeholder' => t('Required if producer type is company'),
    ),
    '#default_value' => $company,
  );

  $form['website'] = array(
    '#type' => 'textfield',
    '#title' => t('Website'),
    '#attributes' => array(
      'placeholder' => t('Enter Website'),
    ),
    '#default_value' => $website,
  );

  // Attachments.
  $form['attachments_container'] = array(
    '#type' => 'container',
    'attachment' => array(),
  );

  $form['attachments_container']['attachment']['producer_agreement'] = array(
    '#title' => t('Producer Agreement'),
    '#type' => 'managed_file',
  );

  $form['attachments_container']['attachment']['current_health_life'] = array(
    '#title' => t('Current Health and Life'),
    '#type' => 'managed_file',
  );

  $form['attachments_container']['attachment']['errors_omission_insurance'] = array(
    '#title' => t('Errors and Omission Insurance'),
    '#type' => 'managed_file',
  );

  $form['submit_container'] = array(
    '#type' => 'container',
  );

  $form['submit_container']['cancel'] = array(
    '#markup' => '<a class="gray-btn" href="/" onClick="parent.Lightbox.end();">Cancel</a>',
  );

  $form['submit_container']['submit'] = array(
    '#type' => 'submit',
    '#attributes' => array(
      'class' => array('green-btn'),
    ),
    '#value' => t('Save'),
  );

  return $form;
}

/**
 * Validation handler for producer form.
 */
function bullseye_producer_form_validate($form, &$form_state) {
  // Require company name field if selected type is company.
  if ($form_state['values']['type'] == 'company' || $form_state['values']['type'] == 'Company') {
    if ($form_state['values']['company'] == '') {
      form_set_error('company', 'Company name is required if selected producer type is company.');
    }
  }
}

/**
 * Form submit for producer form.
 */
function bullseye_producer_form_submit($form, &$form_state) {
  global $user;
  $be = new Bullseye($user);

  // Set the producer name.
  $producer_name = $form_state['values']['company'];
  $firstname = $form_state['values']['firstname'];
  $lastname = $form_state['values']['lastname'];
  $contact_name = $firstname . ' ' . $lastname;
  $contact_email = trim($form_state['values']['primary_contact_email']);
  $type = $form_state['values']['type'];
  $phone = $form_state['values']['phone'];
  $website = $form_state['values']['website'];

  // Handler for adding new producer.
  if (arg(0) == 'producer'  && arg(1) == 'add') {
    // Check if the account already exist.
    if (!$be->accountExist($contact_email)) {
      // Build the username.
      $username = str_replace(' ', '.', strtolower(trim($contact_name)));

      $new_user = array(
        'name' => $username,
        'mail' => $contact_email,
        'pass' => 'be@' . $username,
        'status' => 1,
        'access' => REQUEST_TIME,
        'roles' => array(
          DRUPAL_AUTHENTICATED_RID => 'authenticated user',
          4 => 'producer',
        ),
      );

      // Create new user.
      $create_user = user_save(NULL, $new_user);

      $profile = profile2_create(array('type' => 'producer', 'uid' => $create_user->uid));
      $profile->field_producer_name[LANGUAGE_NONE][0]['value'] = $producer_name;
      $profile->field_first_name[LANGUAGE_NONE][0]['value'] = $firstname;
      $profile->field_last_name[LANGUAGE_NONE][0]['value'] = $lastname;
      $profile->field_producer_type[LANGUAGE_NONE][0]['value'] = $type;
      $profile->field_primary_contact[LANGUAGE_NONE][0]['value'] = $contact_name;
      $profile->field_producer_website[LANGUAGE_NONE][0]['value'] = $website;
      $profile->field_phone_number[LANGUAGE_NONE][0]['value'] = $phone;

      // Save the profile2 to the user account.
      profile2_save($profile);

      drupal_set_message(t('Successfully added new producer account.'));
      
    }
  }
  else {
    // Handler for updating/editing existing producers.
  }

  // Invalidate the existing cache to make sure that
  // the newly added one will get indexed too.
  cache_clear_all('producers_listing', 'cache');
  // Reroute the page to the listing page.
  //drupal_goto('/producers');
    
}
