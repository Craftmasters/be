<?php
/**
 * Bullseye producer module.
 */

/**
 * Implements hook_menu().
 */
function bullseye_producer_menu() {
  $items = array();

  $items['producer/add'] = array(
    'title' => 'Add New Producer',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bullseye_producer_form'),
    'access arguments' => array('add producer'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function bullseye_producer_permission() {
  return array(
    'add producer' => array(
      'title' => t('Add Producer Account'),
      'description' => t('Allow user to add new producer account.'),
    ),
  );
}

/**
 * Implements hook_form().
 *
 * Add producer form.
 */
function bullseye_producer_form($form, &$form_state) {
  $form = array();

  $form['#attributes']['class'][] = 'be-forms be-forms-custom';

  $form['form_title'] = array(
    '#prefix' => '<div class="form-title">',
    '#suffix' => '</div>',
    '#markup' => '<h2>' . t('Add New Producer') . '</h2>',
  );

  $form['type'] = array(
    '#type' => 'radios',
    '#title' => t('Type'),
    '#options' => array(
      'company' => 'Company',
      'individual' => 'Individual',
    ),
    '#default_value' => 'Company',
  );

  $form['firstname'] = array(
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder' => t('Enter First Name'),
    ),
  );

  $form['lastname'] = array(
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder' => t('Enter Last Name'),
    ),
  );

  $form['producer_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Producer Name'),
    '#attributes' => array(
      'placeholder' => t('Enter Producer Name'),
    ),
  );

  $form['primary_contact_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Primary Contact'),
    '#attributes' => array(
      'placeholder' => t('Enter Primary Contact'),
    ),
  );

  $form['primary_contact_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email Address'),
    '#attributes' => array(
      'placeholder' => t('Enter Email Address'),
    ),
  );

  $form['phone'] = array(
    '#type' => 'textfield',
    '#title' => t('Phone'),
    '#attributes' => array(
      'placeholder' => t('Enter Phone Number'),
    ),
  );

  $form['company'] = array(
    '#type' => 'textfield',
    '#title' => t('Company'),
    '#attributes' => array(
      'placeholder' => t('Required if producer type is company'),
    ),
  );

  $form['website'] = array(
    '#type' => 'textfield',
    '#title' => t('Website'),
    '#attributes' => array(
      'placeholder' => t('Enter Website'),
    ),
  );

  // Attachments.
  $form['attachments_container'] = array(
    '#type' => 'container',
    'attachment' => array(),
  );

  $form['attachments_container']['attachment']['producer_agreement'] = array(
    '#title' => t('Producer Agreement'),
    '#type' => 'managed_file',
  );

  $form['attachments_container']['attachment']['current_health_life'] = array(
    '#title' => t('Current Health and Life'),
    '#type' => 'managed_file',
  );

  $form['attachments_container']['attachment']['errors_omission_insurance'] = array(
    '#title' => t('Errors and Omission Insurance'),
    '#type' => 'managed_file',
  );

  $form['submit_container'] = array(
    '#type' => 'container',
  );

  $form['submit_container']['cancel'] = array(
    '#markup' => '<a class="gray-btn" href="/" onClick="parent.Lightbox.end();">Cancel</a>',
  );

  $form['submit_container']['submit'] = array(
    '#type' => 'submit',
    '#attributes' => array(
      'class' => array('green-btn'),
    ),
    '#value' => t('Save'),
  );

  return $form;
}

/**
 * Form submit for producer form.
 */
function bullseye_producer_form_submit($form, &$form_state) {
  global $user;
  $be = new Bullseye($user);

  // Set the producer name.
  $producer_name = $form_state['values']['producer_name'];
  $contact_name = $form_state['values']['primary_contact_name'];
  $contact_email = trim($form_state['values']['primary_contact_email']);

  // Check if the account already exist.
  if (!$be->accountExist($contact_email)) {
    // Build the username.
    $username = str_replace(' ', '.', strtolower(trim($contact_name)));

    $new_user = array(
      'name' => $username,
      'mail' => $contact_email,
      'pass' => 'be@' . $username,
      'status' => 1,
      'access' => REQUEST_TIME,
      'roles' => array(
        DRUPAL_AUTHENTICATED_RID => 'authenticated user',
        4 => 'producer',
      ),
    );

    // Create new user.
    $create_user = user_save(NULL, $new_user);

    $profile = profile2_create(array('type' => 'producer', 'uid' => $create_user->uid));
    $profile->field_producer_name[LANGUAGE_NONE][0]['value'] = $producer_name;
    $profile->field_primary_contact[LANGUAGE_NONE][0]['value'] = $contact_name;

    // Save the profile2 to the user account.
    profile2_save($profile);

    drupal_set_message(t('Successfully added new producer account.'));

    // Invalidate the existing cache to make sure that
    // the newly added one will get indexed too.
    cache_clear_all('producers_listing', 'cache');
    // Reroute the page to the listing page.
    //drupal_goto('/producers');
  }
}
