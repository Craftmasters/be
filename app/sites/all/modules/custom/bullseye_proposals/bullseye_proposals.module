<?php
/**
 * Bullseye proposals module.
 */

/**
 * Implements hook_menu().
 */
function bullseye_proposals_menu() {
  $items = array();

  $items['proposals/add'] = array(
    'title' => 'Send New Proposal',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bullseye_proposals_form'),
    'access arguments' => array('add proposal'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['proposals/send-email'] = array(
    'title' => 'Send Proposal',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bullseye_proposals_email_form'),
    'access arguments' => array('add proposal'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function bullseye_proposals_permission() {
  return array(
    'add proposal' => array(
      'title' => t('Add Proposal'),
      'description' => t('Allow user to add new proposals.'),
    ),
  );
}

/**
 * Implements hook_form().
 *
 * Add proposal form.
 */
function bullseye_proposals_form($form, &$form_state) {
  $form = array();

  $form['#attributes']['class'][] = 'be-forms be-forms-custom';

  $form['form_title'] = array(
    '#prefix' => '<div class="form-title">',
    '#suffix' => '</div>',
    '#markup' => '<h2>' . t('Send New Proposal') . '</h2>',
  );

  $form['account'] = array(
    '#required' => FALSE,
    '#type' => 'entityreference',
    '#title' => t('Select Account'),
    '#era_entity_type' => 'node',
    '#era_bundles' => array('accounts'),
    '#era_cardinality' => 1,
    '#era_query_settings' => array(
      'limit' => 15, // Default is 50.
      'property_conditions' => array(
        array('status', 1, '='),
      ),
      'field_conditions' => array(),
    ),
  );

  // The values for the dropdown box.
  $form['type_options'] = array(
    '#type' => 'value',
    '#value' => array(
      'high' => t('High'),
      'normal' => t('Normal'),
      'low' => t('Low'),
    ),
  );

  $form['priority'] = array(
    '#title' => t('Priority'),
    '#type' => 'select',
    '#description' => "Select the priority level.",
    '#options' => $form['type_options']['#value'],
  );

  $form['due_date'] = array(
    '#type' => 'date_popup',
    '#date_format' => 'm/d/Y',
    '#default_value' => 'YYYY-MM-DD 00:00:00',
    '#date_year_range' => '0:+3',
    '#required' => true,
    '#title' => t('Due Date'),
  );

  $form['benefits_container'] = array(
    '#type' => 'container',
    'benefits' => array(),
  );

  $form['benefits_container']['benefits']['major_medical'] = array(
    '#type' => 'checkbox',
    '#title' => t('Major Medical'),
  );

  $form['benefits_container']['benefits']['limited_medical'] = array(
    '#type' => 'checkbox',
    '#title' => t('Limited Medical'),
  );

  $form['benefits_container']['benefits']['teledoc'] = array(
    '#type' => 'checkbox',
    '#title' => t('Telemedicine'),
  );

  $form['benefits_container']['benefits']['mec'] = array(
    '#type' => 'checkbox',
    '#title' => t('MEC'),
  );

  $form['benefits_container']['benefits']['life'] = array(
    '#type' => 'checkbox',
    '#title' => t('Life & AD&D'),
  );

  $form['benefits_container']['benefits']['short_term_disability'] = array(
    '#type' => 'checkbox',
    '#title' => t('Short Term Disability'),
  );

  $form['benefits_container']['benefits']['dental'] = array(
    '#type' => 'checkbox',
    '#title' => t('Dental'),
  );

  $form['benefits_container']['benefits']['vision'] = array(
    '#type' => 'checkbox',
    '#title' => t('Vision'),
  );

  $form['benefits_container']['benefits']['retirement'] = array(
    '#type' => 'checkbox',
    '#title' => t('Retirement'),
  );

  $form['benefits_container']['benefits']['special_benefits'] = array(
    '#type' => 'checkbox',
    '#title' => t('Special Benefits'),
  );

  $form['special_benefits_text'] = array(
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder' => t('Enter special benefit'),
    ),
  );

  $form['attach_proposal'] = array(
    '#title' => t('Attach Proposal'),
    '#type' => 'managed_file',
  );

  $form['submit_container'] = array(
    '#type' => 'container',
  );

  $form['submit_container']['cancel'] = array(
    '#markup' => '<a class="gray-btn" href="/" onClick="parent.Lightbox.end();">Cancel</a>',
  );

  $form['submit_container']['submit'] = array(
    '#type' => 'submit',
    '#attributes' => array(
      'class' => array('green-btn'),
    ),
    '#value' => t('Next'),
  );

  return $form;
}

/**
 * Implements hook_form_submit().
 *
 * Submit handler for add proposal form.
 */
function bullseye_proposals_form_submit($form, &$form_state) {
  global $user;

  // Make sure the the session is clear before we proceed.
  unset($_SESSION['proposal_recipient']);

  $be = new Bullseye($user);
  $data = $form_state['values'];

  // Build the data for email.
  $account = node_load($data['account']['entity_id']);
  $company = $account->field_company[LANGUAGE_NONE][0]['value'];
  $recipient = $account->field_email[LANGUAGE_NONE][0]['value'];

  // Save the proposal to Proposal entity storage and get the nid.
  $nid = $be->createProposal($data);

  // Load the proposal entity.
  $node = node_load($nid);
  $lang = $node->language;

  $path = '';
  // Get the attachements.
  if (isset($node->field_attached_proposal[$lang][0])) {
    if ($wrapper = file_stream_wrapper_get_instance_by_uri($node->field_attached_proposal[$lang][0]['uri'])) {
      $path = $wrapper->realpath();
    }
  }

  // Save the data temporarily to session variable.
  $_SESSION['proposal_recipient'] = array(
    'company' => $company,
    'attachments' => array(
      0 => array(
        'filename' => $node->field_attached_proposal[$lang][0]['filename'],
        'uri' => $path,
      ),
    ),
    'to' => $recipient,
  );

  // Navigate to proposal email form.
  drupal_goto('proposals/send-email');
}

/**
 * Implements hook_form().
 *
 * Send proposal form (email).
 */
function bullseye_proposals_email_form($form, &$form_state) {
  $form = array();

  // Company name.
  $company_name = $_SESSION['proposal_recipient']['company'];

  $attachment_filename = $_SESSION['proposal_recipient']['attachments'][0]['filename'];
  $attachment_download_path = $_SESSION['proposal_recipient']['attachments'][0]['uri'];

  $form['#attributes']['class'][] = 'be-forms be-forms-custom';

  $form['form_title'] = array(
    '#prefix' => '<div class="form-title">',
    '#suffix' => '</div>',
    '#markup' => '<h2>' . t('Send New Proposal') . '</h2>',
  );

  $form['subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject:'),
    '#default_value' => 'Plan Proposal for ' . $company_name,
  );

  $form['to'] = array(
    '#type' => 'textfield',
    '#title' => t('To:'),
    '#default_value' => $_SESSION['proposal_recipient']['to'],
  );

  $form['show_attachment'] = array(
    '#prefix' => '<div class="show-attachment">',
    '#suffix' => '</div>',
    '#markup' => '<span class="label">Attachment:</span> <a href="' . $attachment_download_path . '" class="orange-font">' . $attachment_filename . '</a>',
  );

  $form['message'] = array(
    '#type' => 'textarea',
    '#attributes' => array(
      'placeholder' => t('Enter message here ..'),
    ),
  );

  $form['submit_container'] = array(
    '#type' => 'container',
  );

  $form['submit_container']['cancel'] = array(
    '#markup' => '<a class="gray-btn" href="/" onClick="parent.Lightbox.end();">Cancel</a>',
  );

  $form['submit_container']['save_draft'] = array(
    '#type' => 'button',
    '#attributes' => array(
      'class' => array('blue-gray-btn'),
    ),
    '#value' => t('Save as Draft'),
  );

  $form['submit_container']['submit'] = array(
    '#type' => 'submit',
    '#attributes' => array(
      'class' => array('green-btn'),
    ),
    '#value' => t('Send'),
  );

  return $form;
}

/**
 * Implements hook_form_submit().
 *
 * Submit handler for add proposal form (email).
 */
function bullseye_proposals_email_form_submit($form, &$form_state) {
  global $user;
  $data = $form_state['values'];

  $be = new Bullseye($user);
  $be->sendProposal($data);
}
