<?php
/**
 * Bullseye carriers module.
 */

/**
 * Implements hook_menu().
 */
function bullseye_carriers_menu() {
  $items = array();

  $items['carriers/add'] = array(
    'title' => 'Add New Carrier',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bullseye_carriers_form'),
    'access arguments' => array('add carrier'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['carriers/edit'] = array(
    'title' => 'Edit Carrier',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bullseye_carriers_form'),
    'access arguments' => array('add carrier'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['carriers/delete'] = array(
    'title' => t('Delete Items'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('carriers_delete_form'),
    'access arguments' => array('add account'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['get-carrier-email'] = array(
    'page callback' => 'bullseye_carriers_get_email',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function bullseye_carriers_permission() {
  return array(
    'add carrier' => array(
      'title' => t('Add Carrier'),
      'description' => t('Allow user to add new carrier.'),
    ),
  );
}

/**
 * Implements hook_form().
 *
 * Delete carriers form.
 */
function carriers_delete_form($form, &$form_state) {

  $form = array();

  $form['#attributes']['class'][] = 'be-forms be-forms-custom';

  if (isset($_GET['ids']) && !empty($_GET['ids'])) {

    $ids = $_GET['ids'];
    $ids = explode(',', $ids);

    // Removing empty values.
    foreach ($ids as $key => $value) {
      if ($value == '') {
        unset($ids[$key]);
      }
    }
    $ids = array_unique($ids);

    $items_div = '';

    foreach ($ids as $key => $value) {
      $node = node_load($value);
      $title = $node->title;
      $contact = $node->field_primary_contact[LANGUAGE_NONE][0]['value'];
      $markup = $node->nid . ' - ' . $title . ' (' . $contact . ')';
      $items_div .= '<div class="be-item">' . $markup . '</div>';
    }

    $form['form_title'] = array(
      '#prefix' => '<div class="form-title">',
      '#suffix' => '</div>',
      '#markup' => '<h2>' . t('Are you sure you want to delete the following items?') . '</h2>',
    );

    $form['items'] = array(
      '#prefix' => '<div class="be-items-multiple">',
      '#markup' => $items_div,
      '#suffix' => '</div>',
    );

    $form['submit_container'] = array(
      '#type' => 'container',
    );

    $form['submit_container']['cancel'] = array(
      '#markup' => '<a class="gray-btn" href="/" onClick="parent.Lightbox.end();">Cancel</a>',
    );

    $form['submit_container']['submit'] = array(
      '#type' => 'submit',
      '#attributes' => array(
        'class' => array('green-btn'),
      ),
      '#value' => t('Delete'),
    );
  }
  else {
    $form['form_title'] = array(
      '#prefix' => '<div class="form-title">',
      '#suffix' => '</div>',
      '#markup' => '<h2>' . t('You did not select any items. Please select items first.') . '</h2>',
    );

    $form['submit_container'] = array(
      '#type' => 'container',
    );

    $form['submit_container']['cancel'] = array(
      '#markup' => '<a class="gray-btn" href="/" onClick="parent.Lightbox.end();">Close</a>',
    );
  }

  return $form;
}

/**
 * Submit handler for Delete carriers form.
 */
function carriers_delete_form_submit($form, &$form_state) {
  $ids = $_GET['ids'];
  $ids = explode(',', $ids);

  // Removing empty values.
  foreach ($ids as $key => $value) {
    if ($value == '') {
      unset($ids[$key]);
    }
  }
  $ids = array_unique($ids);

  node_delete_multiple($ids);

  cache_clear_all('carriers_listing', 'cache');

  drupal_set_message('Successfully deleted items.');

}

/**
 * Implements hook_form().
 *
 * Add carrier form.
 */
function bullseye_carriers_form($form, &$form_state) {
  $form = array();

  $form['#attributes']['class'][] = 'be-forms be-forms-custom';

  $form_title = t('Add New Carrier');

  $carrier_name = '';
  $primary_contact_name = '';
  $primary_contact_email = '';
  $contact_number = '';
  $address = '';
  $benefits = array();
  $major_medical = 0;
  $limited_medical = 0;
  $teledoc = 0;
  $mec = 0;
  $life = 0;
  $short_term_disability = 0;
  $dental = 0;
  $vision = 0;
  $retirement = 0;
  $special_benefits = 0;
  $special_benefits_text = '';

  if (arg(1) == 'edit') {
    $form_title = t('Edit Carrier Details');
    $carrier = Bullseye::getCarrierDetails(arg(2));
    krumo($carrier);
    $carrier_name = $carrier['title'];
    $primary_contact_name = $carrier['field_primary_contact_value'];
    $primary_contact_email = $carrier['field_email_value'];
    $contact_number = $carrier['field_contact_number_value'];
    $address = $carrier['field_street_value'];
    $benefits = $carrier['field_benefits_value'];
    $special_benefits_text = $carrier['field_special_benefits_value'];
    if (in_array('major_medical', $benefits)) {
      $major_medical = 1;
    }
    if (in_array('limited_medical', $benefits)) {
      $limited_medical = 1;
    }
    if (in_array('teledoc', $benefits)) {
      $teledoc = 1;
    }
    if (in_array('mec', $benefits)) {
      $mec = 1;
    }
    if (in_array('life', $benefits)) {
      $life = 1;
    }
    if (in_array('short_term_disability', $benefits)) {
      $short_term_disability = 1;
    }
    if (in_array('dental', $benefits)) {
      $dental = 1;
    }
    if (in_array('vision', $benefits)) {
      $vision = 1;
    }
    if (in_array('retirement', $benefits)) {
      $retirement = 1;
    }
    if (in_array('special_benefits', $benefits)) {
      $special_benefits = 1;
    }
  }

  $form['form_title'] = array(
    '#prefix' => '<div class="form-title">',
    '#suffix' => '</div>',
    '#markup' => '<h2>' . $form_title . '</h2>',
  );

  $form['carrier_name'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('Carier Name'),
    '#attributes' => array(
      'placeholder' => t('Enter Carrier Name'),
    ),
    '#default_value' => $carrier_name,
  );

  $form['primary_contact_name'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('Primary Contact'),
    '#attributes' => array(
      'placeholder' => t('Enter Primary Contact Name'),
    ),
    '#default_value' => $primary_contact_name,
  );

  $form['primary_contact_email'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('Email Address'),
    '#attributes' => array(
      'placeholder' => t('Enter Contact Number'),
    ),
    '#default_value' => $primary_contact_email,
  );

  $form['contact_number'] = array(
    '#type' => 'textfield',
    '#title' => t('Contact Number'),
    '#required' => TRUE,
    '#attributes' => array(
      'placeholder' => t('Enter Contact Number'),
    ),
    '#default_value' => $contact_number,
  );

  $form['address'] = array(
    '#type' => 'textfield',
    '#title' => t('Address'),
    '#attributes' => array(
      'placeholder' => t('Enter Address'),
    ),
    '#default_value' => $address,
  );

  $form['benefits_container'] = array(
    '#type' => 'container',
    'benefits' => array(),
  );

  $form['benefits_container']['benefits']['major_medical'] = array(
    '#type' => 'checkbox',
    '#title' => t('Major Medical'),
    '#default_value' => $major_medical,
  );

  $form['benefits_container']['benefits']['limited_medical'] = array(
    '#type' => 'checkbox',
    '#title' => t('Limited Medical'),
    '#default_value' => $limited_medical,
  );

  $form['benefits_container']['benefits']['teledoc'] = array(
    '#type' => 'checkbox',
    '#title' => t('Telemedicine'),
    '#default_value' => $teledoc,
  );

  $form['benefits_container']['benefits']['mec'] = array(
    '#type' => 'checkbox',
    '#title' => t('MEC'),
    '#default_value' => $mec,
  );

  $form['benefits_container']['benefits']['life'] = array(
    '#type' => 'checkbox',
    '#title' => t('Life & AD&D'),
    '#default_value' => $life,
  );

  $form['benefits_container']['benefits']['short_term_disability'] = array(
    '#type' => 'checkbox',
    '#title' => t('Short Term Disability'),
    '#default_value' => $short_term_disability,
  );

  $form['benefits_container']['benefits']['dental'] = array(
    '#type' => 'checkbox',
    '#title' => t('Dental'),
    '#default_value' => $dental,
  );

  $form['benefits_container']['benefits']['vision'] = array(
    '#type' => 'checkbox',
    '#title' => t('Vision'),
    '#default_value' => $vision,
  );

  $form['benefits_container']['benefits']['retirement'] = array(
    '#type' => 'checkbox',
    '#title' => t('Retirement'),
    '#default_value' => $retirement,
  );

  $form['benefits_container']['benefits']['special_benefits'] = array(
    '#type' => 'checkbox',
    '#title' => t('Special Benefits'),
    '#default_value' => $special_benefits,
  );

  $form['special_benefits_text'] = array(
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder' => t('Enter special benefit'),
    ),
    '#default_value' => $special_benefits_text,
  );

  // The values for the dropdown box.
  $form['type_options'] = array(
    '#type' => 'value',
    '#value' => array(
      'high' => t('High'),
      'normal' => t('Normal'),
      'low' => t('Low'),
    ),
  );

  $form['priority'] = array(
    '#title' => t('Priority'),
    '#type' => 'select',
    '#description' => "Select the priority level.",
    '#options' => $form['type_options']['#value'],
  );

  $form['due_date'] = array(
    '#type' => 'date_popup',
    '#date_format' => 'm/d/Y',
    '#default_value' => 'YYYY-MM-DD 00:00:00',
    '#date_year_range' => '0:+3',
    '#size' => 12,
    '#title' => t('Due Date'),
  );

  $form['submit_container'] = array(
    '#type' => 'container',
  );

  $form['submit_container']['cancel'] = array(
    '#markup' => '<a class="gray-btn" href="/" onClick="parent.Lightbox.end();">Cancel</a>',
  );

  $form['submit_container']['submit'] = array(
    '#type' => 'submit',
    '#attributes' => array(
      'class' => array('green-btn'),
    ),
    '#value' => t('Save'),
  );

  return $form;
}

/**
 * Form submit for carrier form.
 */
function bullseye_carriers_form_submit($form, &$form_state) {
  global $user;

  $be = new Bullseye($user);

  // Set the producer name.
  $carrier_name = $form_state['values']['carrier_name'];
  $contact_name = $form_state['values']['primary_contact_name'];
  $contact_email = $form_state['values']['primary_contact_email'];
  $contact_number = $form_state['values']['contact_number'];
  $address = $form_state['values']['address'];
  $priority = $form_state['values']['priority'];
  $due_date = $form_state['values']['due_date'];
  $benefits = array();
  $special_benefits_text = $form_state['values']['special_benefits_text'];

  foreach ($form_state['complete form']['benefits_container']['benefits'] as $key => $value) {
    if (isset($value['#value']) && $value['#value'] == 1) {
      $benefits[] = $key;
    }
  }

  if (arg(1) == 'edit') {
    $wrapper = entity_metadata_wrapper('node', arg(2));
    $wrapper->title->set($carrier_name);
    $wrapper->status->set(1);
    $wrapper->field_primary_contact->set($contact_name);
    $wrapper->field_email->set($contact_email);
    $wrapper->field_priority->set($priority);
    $wrapper->field_due_date->set($due_date);
    $wrapper->field_contact_number->set($contact_number);
    $wrapper->field_street->set($address);
    $wrapper->field_benefits->set($benefits);
    $wrapper->field_special_benefits->set($special_benefits_text);
    $wrapper->save();

    drupal_set_message(t('Successfully updated carrier information.'));

    // Invalidate the existing cache to make sure that
    // the newly added one will get indexed too.
    cache_clear_all('carriers_listing', 'cache');
    cache_clear_all('carrier_info_' . arg(2), 'cache');
  }
  else {
    // Check if the account already exist.
    if (!$be->carrierExist($carrier_name)) {
      $node = new stdClass();
      $node->type = "carrier";
      node_object_prepare($node);
      $node->language = LANGUAGE_NONE;
      $node->uid = $user->uid;
      $node->promote = 0;
      $node->comment = 0;

      $wrapper = entity_metadata_wrapper('node', $node);
      $wrapper->title->set($carrier_name);
      $wrapper->status->set(1);
      $wrapper->field_primary_contact->set($contact_name);
      $wrapper->field_email->set($contact_email);
      $wrapper->field_priority->set($priority);
      $wrapper->field_due_date->set($due_date);
      $wrapper->field_contact_number->set($contact_number);
      $wrapper->field_street->set($address);
      $wrapper->field_benefits->set($benefits);
      $wrapper->field_special_benefits->set($special_benefits_text);
      $wrapper->save();

      drupal_set_message(t('Successfully added carrier.'));

      // Invalidate the existing cache to make sure that
      // the newly added one will get indexed too.
      cache_clear_all('carriers_listing', 'cache');
    }
    else {
      drupal_set_message(t('Carrier already exist.'));
    }
  }
}

/**
 * Get the email for carrier.
 */
function bullseye_carriers_get_email() {
  $carrier_nid = $_POST['carrier_nid'];

  $wrapper = entity_metadata_wrapper('node', $carrier_nid);
  $email = $wrapper->field_email->value();

  drupal_json_output($email);
}
