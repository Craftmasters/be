<?php
/**
 * Bullseye event module.
 */

/**
 * Implements hook_menu().
 */
function bullseye_event_menu() {
  $items = array();

  $items['be-event/save-activity'] = array(
    'page callback' => 'bullseye_event_save_activity',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['be-event/load-activities'] = array(
    'page callback' => 'bullseye_event_load_activities',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function bullseye_event_theme() {
  // Init vars.
  $template_path = drupal_get_path('module', 'bullseye_event') . '/templates';

  // Return theme definitions.
  return array(

    // Top Header Block.
    'be_recent_activities_rows' => array(
      'variables' => array(),
      'template' => 'be-recent-activities-rows',
      'path' => $template_path,
    ),

  );
}

/**
 * Save the activity.
 */
function bullseye_event_save_activity() {

	global $user;

	$nid = $_POST['nid'];
	$activity_name = $_POST['activity_name'];
  $type = $_POST['type'];
  $contact = $_POST['contact'];
  $date = strtotime($_POST['date']);
  $priority = $_POST['priority'];
  $contact_details = Bullseye::getContactDetailsById($contact);
  $firstname = $contact_details['field_firstname_value'];
  $lastname = $contact_details['field_lastname_value'];
  $contact_name = $firstname . ' ' . $lastname;
  $event_type = $_POST['event_type'];


  $node = new stdClass();
  $node->type = 'task';
  $node->uid = $user->uid;
  node_object_prepare($node);
  $node->language = LANGUAGE_NONE;

  if ($type == 'phone_call') {
  	$title = 'Phone call with ' . $contact_name;
    if ($event_type == 'activity') {
      cache_clear_all('recent_activities_phonecall_' . $nid, 'cache');
    }
  }
  elseif ($type == 'email') {
  	$title = 'Email with ' . $contact_name;
    if ($event_type == 'activity') {
      cache_clear_all('recent_activities_email_' . $nid, 'cache');
    }
  }
  elseif ($type == 'meeting') {
  	$title = 'Meeting with ' . $contact_name;
    if ($event_type == 'activity') {
      cache_clear_all('recent_activities_meeting_' . $nid, 'cache');
    }
  }
  elseif ($type == 'others') {
  	$title = $activity_name;
    if ($event_type == 'activity') {
      cache_clear_all('recent_activities_others_' . $nid, 'cache');
    }
  }

  $wrapper = entity_metadata_wrapper('node', $node);
  $wrapper->title->set($title);
  $wrapper->field_task_type->set($type);
  $wrapper->field_due_date->set($date);
  $wrapper->field_contact->set($contact);
  $wrapper->field_priority->set($priority);
  $wrapper->field_account->set($nid);
  $wrapper->field_if_system_generated->set('no');
  $wrapper->field_event_type->set($event_type);
  
  $wrapper->save();

  cache_clear_all('recent_activities_' . $nid, 'cache');

  drupal_json_output($wrapper);
}

/**
 * Load the recent activities.
 */
function bullseye_event_load_activities() {
	global $base_url;

  $theme_directory = path_to_theme('theme', 'bullseye');
  $call_icon = $base_url . '/' . $theme_directory . '/images/icons/be_activity_call.svg';
  $send_icon = $base_url . '/' . $theme_directory . '/images/icons/be_activity_send.svg';
  $receive_icon = $base_url . '/' . $theme_directory . '/images/icons/be_activity_receive.svg';
  $meeting_icon = $base_url . '/' . $theme_directory . '/images/icons/be_activity_meeting.svg';

	$nid = $_POST['nid'];
	$filter = $_POST['filter'];

	if ($filter == 'phone_call') {
		$activities = Bullseye::getRecentPhoneCallActivitiesByNid($nid);
	}
	elseif ($filter == 'meeting') {
		$activities = Bullseye::getRecentMeetingActivitiesByNid($nid);
	}
	elseif ($filter == 'email') {
		$activities = Bullseye::getRecentEmailActivitiesByNid($nid);
	}
	elseif ($filter == 'others') {
		$activities = Bullseye::getRecentOthersActivitiesByNid($nid);
	}
	else {
		$activities = Bullseye::getRecentActivitiesByNid($nid);
	}

	$sorted = array();

	$be = new Bullseye($user);

	if (!empty($activities)) {
		foreach ($activities as $key => $value) {
	    $date = strtotime($value->field_due_date_value);
	    $value->icon_img = $send_icon;

	    // Contact name.
	    $contact = Bullseye::getContactDetailsById($value->field_contact_value);
	    $firstname = ucwords($contact['field_firstname_value']);
	    $lastname = substr($contact['field_lastname_value'], 0, 1);
	    $value->contact_name = $firstname . ' ' . strtoupper($lastname) . '.';
	    $value->description = $value->title . ' - ';

	    // For the icon and description.
	    if ($value->field_task_type_value == 'phone_call') {
	      $value->icon_img = $call_icon;
	      $value->description = 'Call with';
	    }
	    elseif ($value->field_task_type_value == 'email') {
	      $value->icon_img = $send_icon;
	      $value->description = 'Email with';
	    }
	    elseif ($value->field_task_type_value == 'meeting') {
	      $value->icon_img = $meeting_icon;
	      $value->description = 'Meeting with';
	    }

	    if ($value->field_if_system_generated_value == 'yes') {
	      $firstname = $be->getAccountFirstName($value->field_contact_value);
	      $firstname = ucwords($firstname);
	      $lastname = $be->getAccountLastName($value->field_contact_value);
	      $lastname = substr($lastname, 0, 1);
	      $value->contact_name = $firstname . ' ' . strtoupper($lastname) . '.';
	      $value->description = $value->title . ' by ';
	    }

	    $value->formatted_date = date('M j', strtotime($value->field_due_date_value));
	    $sorted[$date . '-' . $value->nid] = $value;
	  }

	  krsort($sorted);
	}
	 
  $vars['activities'] = $sorted;

  $output = theme('be_recent_activities_rows', $vars);

  echo $output;
}

/**
 * Override or insert variables into the page templates.
 */
function bullseye_event_preprocess_page(&$vars, $hook) {
  global $base_url;

  if (arg(0) == 'company') {
  	$dir = drupal_get_path('module', 'bullseye_event');

	  $js_path = $base_url . '/' . $dir . '/js/bullseye_event.js';

	  // Add the js for events.
	  drupal_add_js($js_path);
  }

}