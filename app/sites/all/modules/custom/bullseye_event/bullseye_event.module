<?php
/**
 * Bullseye event module.
 */

/**
 * Implements hook_menu().
 */
function bullseye_event_menu() {
  $items = array();

  $items['be-event/save-activity'] = array(
    'page callback' => 'bullseye_event_save_activity',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['be-event/save-task'] = array(
    'page callback' => 'bullseye_event_save_task',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['be-event/load-activities'] = array(
    'page callback' => 'bullseye_event_load_activities',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['be-event/edit-task'] = array(
    'title' => 'Send Proposal',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bullseye_event_edit_task'),
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function bullseye_event_theme() {
  // Init vars.
  $template_path = drupal_get_path('module', 'bullseye_event') . '/templates';

  // Return theme definitions.
  return array(

    // Top Header Block.
    'be_recent_activities_rows' => array(
      'variables' => array(),
      'template' => 'be-recent-activities-rows',
      'path' => $template_path,
    ),

  );
}

/**
 * Save the activity.
 */
function bullseye_event_save_activity() {

	global $user;

	$nid = $_POST['nid'];
	$activity_name = $_POST['activity_name'];
  $type = $_POST['type'];
  $contact = $_POST['contact'];
  $date = strtotime($_POST['date']);
  $priority = $_POST['priority'];
  $contact_details = Bullseye::getContactDetailsById($contact);
  $firstname = $contact_details['field_firstname_value'];
  $lastname = $contact_details['field_lastname_value'];
  $contact_name = $firstname . ' ' . $lastname;

  $node = new stdClass();
  $node->type = 'task';
  $node->uid = $user->uid;
  node_object_prepare($node);
  $node->language = LANGUAGE_NONE;

  if ($type == 'phone_call') {
  	$title = 'Phone call with ' . $contact_name;
    cache_clear_all('recent_events_phonecall_' . $nid, 'cache');
  }
  elseif ($type == 'email') {
  	$title = 'Email to ' . $contact_name;
    cache_clear_all('recent_events_email_' . $nid, 'cache');
  }
  elseif ($type == 'meeting') {
  	$title = 'Meeting with ' . $contact_name;
    cache_clear_all('recent_events_meeting_' . $nid, 'cache');
  }
  elseif ($type == 'others') {
  	$title = $activity_name . ' with ' . $contact_name;
    cache_clear_all('recent_events_others_' . $nid, 'cache');
  }

  $wrapper = entity_metadata_wrapper('node', $node);
  $wrapper->title->set($title);
  $wrapper->field_event_name->set($activity_name);
  $wrapper->field_task_type->set($type);
  $wrapper->field_due_date->set($date);
  $wrapper->field_contact->set($contact);
  $wrapper->field_priority->set($priority);
  $wrapper->field_account->set($nid);
  $wrapper->field_if_system_generated->set('no');
  $wrapper->field_task_status->set('closed');
  $wrapper->field_assigned_to->set('');
  $wrapper->field_event_type->set('activity');
  
  $wrapper->save();

  cache_clear_all('recent_events_' . $nid, 'cache');

  drupal_json_output($wrapper);
}

/**
 * Save the task.
 */
function bullseye_event_save_task() {

  global $user;

  $be = new Bullseye($user);

  $nid = $_POST['nid'];
  $task_name = $_POST['task_name'];
  $type = $_POST['type'];
  $assigned_to = $_POST['assigned_to'];
  $date = strtotime($_POST['date']);
  $priority = $_POST['priority'];

  $firstname = $be->getAccountFirstName($assigned_to);
  $firstname = ucwords($firstname);
  $lastname = $be->getAccountLastName($assigned_to);
  $lastname = ucwords($lastname);
  $contact_name = $firstname . ' ' . $lastname;

  $node = new stdClass();
  $node->type = 'task';
  $node->uid = $user->uid;
  node_object_prepare($node);
  $node->language = LANGUAGE_NONE;

  if ($type == 'phone_call') {
    $title = 'Call with ' . $contact_name;
    cache_clear_all('recent_events_phonecall_' . $nid, 'cache');
  }
  elseif ($type == 'email') {
    $title = 'Email by ' . $contact_name;
    cache_clear_all('recent_events_email_' . $nid, 'cache');
  }
  elseif ($type == 'meeting') {
    $title = 'Meeting with ' . $contact_name;
    cache_clear_all('recent_events_meeting_' . $nid, 'cache');
  }
  elseif ($type == 'others') {
    $title = $task_name . ' with ' . $contact_name;
    cache_clear_all('recent_events_others_' . $nid, 'cache');
  }

  $wrapper = entity_metadata_wrapper('node', $node);
  $wrapper->title->set($title);
  $wrapper->field_event_name->set($task_name);
  $wrapper->field_task_type->set($type);
  $wrapper->field_due_date->set($date);
  $wrapper->field_contact->set('');
  $wrapper->field_priority->set($priority);
  $wrapper->field_account->set($nid);
  $wrapper->field_if_system_generated->set('no');
  $wrapper->field_task_status->set('open');
  $wrapper->field_assigned_to->set($assigned_to);
  $wrapper->field_event_type->set('task');
  
  $wrapper->save();

  cache_clear_all('recent_events_' . $nid, 'cache');

  drupal_json_output($wrapper);
}

/**
 * Edit Existing tasks.
 */
function bullseye_event_edit_task($form, &$form_state) {
  $form = array();

  $task_id = $_GET['nid'];
  $company_id = $_GET['company'];

  $contacts = Bullseye::getAccountPeople($company_id);
  $contacts_options = array();

  foreach ($contacts as $key => $value) {
    $contact_name = $value->field_firstname_value . ' ' . $value->field_lastname_value;
    $contacts_options[$value->field_contacts_value] = $contact_name;
  }
  
  $event = Bullseye::getEventDetailsByNid($task_id);

  $date_formatted = date('m/d/Y g:i A', strtotime($event['field_due_date_value']));

  $form['#attributes']['class'][] = 'be-forms be-forms-custom';

  $form['form_title'] = array(
    '#prefix' => '<div class="form-title">',
    '#suffix' => '</div>',
    '#markup' => '<h2>' . t('Edit Task') . '</h2>',
  );

  $form['task_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Task Name'),
    '#default_value' => $event['field_event_name_value'],
  );

  $form['task_type'] = array(
    '#title' => t('Type'),
    '#type' => 'select',
    '#options' => array(
      'phone_call' => t('Phone Call'),
      'meeting' => t('Meeting'),
      'email' => t('Email'),
      'others' => t('Others'),
    ),
    '#default_value' => $event['field_task_type_value'],
  );

  $form['priority'] = array(
    '#title' => t('Priority'),
    '#type' => 'select',
    '#options' => array(
      'high' => t('High'),
      'normal' => t('Normal'),
      'low' => t('Low'),
    ),
    '#default_value' => $event['field_priority_value'],
  );

  $form['contact'] = array(
    '#title' => t('Contact'),
    '#type' => 'select',
    '#options' => $contacts_options,
    '#default_value' => '',
  );

  $form['due_date'] = array(
    '#type' => 'textfield',
    '#title' => t('Due Date'),
    '#default_value' => $date_formatted,
  );

  $form['status'] = array(
    '#title' => t('Status'),
    '#type' => 'select',
    '#options' => array(
      'open' => t('Open'),
      'closed' => t('Closed'),
    ),
    '#default_value' => $event['field_task_status_value'],
  );

  $form['submit_container'] = array(
    '#type' => 'container',
  );

  $form['submit_container']['cancel'] = array(
    '#markup' => '<a class="gray-btn" href="/" onClick="parent.Lightbox.end();">Cancel</a>',
  );

  $form['submit_container']['submit'] = array(
    '#type' => 'submit',
    '#attributes' => array(
      'class' => array('green-btn'),
    ),
    '#value' => t('Save'),
  );

  return $form;
}

/**
 * Submit handler for edit task form.
 */
function bullseye_event_edit_task_submit($form, &$form_state) {

  $task_id = $_GET['nid'];
  $company_id = $_GET['company'];

  $activity_name = $form_state['values']['task_name'];
  $type = $form_state['values']['task_type'];
  $contact = $form_state['values']['contact'];
  $date = strtotime($form_state['values']['due_date']);
  $priority = $form_state['values']['priority'];
  $contact_details = Bullseye::getContactDetailsById($contact);
  $firstname = $contact_details['field_firstname_value'];
  $lastname = $contact_details['field_lastname_value'];
  $contact_name = $firstname . ' ' . $lastname;
  $event_type = 'task';
  $status = $form_state['values']['status'];

  if ($type == 'phone_call') {
    $title = 'Phone call with ' . $contact_name;
    cache_clear_all('recent_events_phonecall_' . $company_id, 'cache');
  }
  elseif ($type == 'email') {
    $title = 'Email with ' . $contact_name;
    cache_clear_all('recent_events_email_' . $company_id, 'cache');
  }
  elseif ($type == 'meeting') {
    $title = 'Meeting with ' . $contact_name;
    cache_clear_all('recent_events_meeting_' . $company_id, 'cache');
  }
  elseif ($type == 'others') {
    $title = $activity_name;
    cache_clear_all('recent_events_others_' . $company_id, 'cache');
  }

  $wrapper = entity_metadata_wrapper('node', $task_id);
  $wrapper->title->set($title);
  $wrapper->field_event_name->set($activity_name);
  $wrapper->field_task_type->set($type);
  $wrapper->field_due_date->set($date);
  $wrapper->field_contact->set($contact);
  $wrapper->field_priority->set($priority);
  $wrapper->field_account->set($company_id);
  $wrapper->field_if_system_generated->set('no');
  $wrapper->field_task_status->set($status);
  $wrapper->field_event_type->set($event_type);
  
  $wrapper->save();

  cache_clear_all('recent_events_' . $company_id, 'cache');
  cache_clear_all('event_details_' . $task_id, 'cache');

  drupal_set_message('Successfully updated task.');
}

/**
 * Load the recent activities.
 */
function bullseye_event_load_activities() {
	global $base_url;

  $theme_directory = path_to_theme('theme', 'bullseye');
  $call_icon = $base_url . '/' . $theme_directory . '/images/icons/be_activity_call.svg';
  $send_icon = $base_url . '/' . $theme_directory . '/images/icons/be_activity_send.svg';
  $receive_icon = $base_url . '/' . $theme_directory . '/images/icons/be_activity_receive.svg';
  $meeting_icon = $base_url . '/' . $theme_directory . '/images/icons/be_activity_meeting.svg';

	$nid = $_POST['nid'];
	$filter = $_POST['filter'];

	if ($filter == 'phone_call') {
		$activities = Bullseye::getRecentPhoneCallEventsByNid($nid);
	}
	elseif ($filter == 'meeting') {
		$activities = Bullseye::getRecentMeetingEventsByNid($nid);
	}
	elseif ($filter == 'email') {
		$activities = Bullseye::getRecentEmailEventsByNid($nid);
	}
	elseif ($filter == 'others') {
		$activities = Bullseye::getRecentOthersEventsByNid($nid);
	}
	else {
		$activities = Bullseye::getRecentEventsByNid($nid);
	}

	$sorted = array();

	$be = new Bullseye($user);

	if (!empty($activities)) {
		foreach ($activities as $key => $value) {
	    $date = strtotime($value->field_due_date_value);
	    $value->icon_img = $send_icon;
      $value->description = $value->field_event_name_value . ' with';
      $value->usercolor = 'orange-font';

      if ($value->field_event_type_value == 'activity') {
        // Contact name.
        $contact = Bullseye::getContactDetailsById($value->field_contact_value);
        $firstname = ucwords($contact['field_firstname_value']);
        $lastname = substr($contact['field_lastname_value'], 0, 1);
        $value->contact_name = $firstname . ' ' . strtoupper($lastname) . '.';

        // For the icon and description.
        if ($value->field_task_type_value == 'phone_call') {
          $value->icon_img = $call_icon;
          $value->description = 'Call with';
        }
        elseif ($value->field_task_type_value == 'email') {
          $value->icon_img = $send_icon;
          $value->description = 'Email to';
        }
        elseif ($value->field_task_type_value == 'meeting') {
          $value->icon_img = $meeting_icon;
          $value->description = 'Meeting with';
        }

        if ($value->field_if_system_generated_value == 'yes') {
          $firstname = $be->getAccountFirstName($value->field_contact_value);
          $firstname = ucwords($firstname);
          $lastname = $be->getAccountLastName($value->field_contact_value);
          $lastname = substr($lastname, 0, 1);
          $value->contact_name = $firstname . ' ' . strtoupper($lastname) . '.';
          $value->description = $value->title . ' by ';
        }
      }

      if ($value->field_event_type_value == 'task') {
        $value->usercolor = 'green-font';
        $firstname = $be->getAccountFirstName($value->field_assigned_to_value);
        $firstname = ucwords($firstname);
        $lastname = $be->getAccountLastName($value->field_assigned_to_value);
        $lastname = substr($lastname, 0, 1);
        $value->contact_name = $firstname . ' ' . strtoupper($lastname) . '.';

        // For the icon and description.
        if ($value->field_task_type_value == 'phone_call') {
          $value->icon_img = $call_icon;
          $value->description = 'Call with';
        }
        elseif ($value->field_task_type_value == 'email') {
          $value->icon_img = $send_icon;
          $value->description = 'Email by';
        }
        elseif ($value->field_task_type_value == 'meeting') {
          $value->icon_img = $meeting_icon;
          $value->description = 'Meeting with';
        }
      }

	    $value->formatted_date = date('M j', strtotime($value->field_due_date_value));
	    $sorted[$date . '-' . $value->nid] = $value;
	  }

	  krsort($sorted);
	}
	
  $vars['nid'] = $nid;
  $vars['activities'] = $sorted;

  $output = theme('be_recent_activities_rows', $vars);

  echo $output;
}

/**
 * Override or insert variables into the page templates.
 */
function bullseye_event_preprocess_page(&$vars, $hook) {
  global $base_url;

  if (arg(0) == 'company') {
  	$dir = drupal_get_path('module', 'bullseye_event');

	  $js_path = $base_url . '/' . $dir . '/js/bullseye_event.js';

	  // Add the js for events.
	  drupal_add_js($js_path);
  }

}